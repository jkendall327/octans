@using Octans.Client.Components.Gallery
<article class="tag-chooser">
    <section class="paths">
        <MudDataGrid
            T="PathItem"
            MultiSelection="true"
            SelectedItems="@SelectedPaths"
            Items="@(Paths.Select((s, i) => new PathItem
                   {
                       Path = s,
                       Index = i
                   }))">
            <Columns>
                <PropertyColumn Property="@(x => x.Index)" Title="#"/>
                <PropertyColumn Property="@(x => x.Path)"/>
                <TemplateColumn Title="Metadata"/>
            </Columns>
        </MudDataGrid>
    </section>
    <section class="tag-selection">
        <div class="tag-inputs">
            <div class="tags-for-all">
                <ManualTagInput 
                    Title="tags for all"
                    TagsChanged="tags => { }"
                />
            </div>
            <div class="tags-for-selected">
                <ManualTagInput 
                    Title="tags for selected items"
                    TagsChanged="tags => { }"
                    />
            </div>
        </div>
        <MiscTagOptionsComponent OptionsChanged="OnMiscOptionsChanged" />
    </section>
</article>

@code {
    [Parameter, EditorRequired] public IEnumerable<string> Paths { get; set; } = [];
    [Parameter, EditorRequired] public EventCallback<List<TagsForPath>> OnConfirm { get; set; }
    [Parameter, EditorRequired] public EventCallback OnCancel { get; set; }

    public HashSet<PathItem> SelectedPaths { get; set; } = [];

    private void OnMiscOptionsChanged(MiscTagOptionsData miscOptions)
    {
        // Handle misc options change - this data can be used during import
        // to automatically generate tags based on file paths
    }

    public sealed class PathItem
    {
        public required string Path { get; set; }
        public required int Index { get; set; }
    }

    public sealed class TagsForPath
    {
        public required string Path { get; set; }
        public List<TagViewer.Tag> Tags { get; set; } = [];
    }

}

<style>
    article {
        display: flex;
        flex-direction: column;
        border: 1px solid;
    }

    .tag-selection {
        display: flex;
        flex-direction: row;
    }

    .tag-inputs {
        display: flex;
        flex-direction: row;
        flex: 1 1 0;
    }

</style>