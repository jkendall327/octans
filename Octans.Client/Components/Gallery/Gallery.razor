@page "/gallery"
@using Microsoft.Extensions.Options
@using Octans.Client.Components.Pages
@using Octans.Client.Options
@inject GalleryViewmodel Viewmodel
@inject IOptions<ThumbnailOptions> Options
@implements IAsyncDisposable

<h3>Gallery</h3>

<section class="querying">
    <QueryBuilder
        OnQueryChanged="@Viewmodel.OnQueryChanged"
        OnCancellationRequested="@Viewmodel.OnCancel"
        CanCancel="@Viewmodel.Searching"
    />
</section>

<div class="gallery-container">
    @if (Viewmodel.ImageUrls.Any())
    {
        <div class="image-grid">
            @foreach (var url in Viewmodel.ImageUrls)
            {
                <div class="image-card">
                    <img src="@url"
                         alt="Gallery image"
                         loading="lazy"
                         decoding="async"
                         referrerpolicy="no-referrer" />
                </div>
            }
        </div>
    }
    else if (!string.IsNullOrWhiteSpace(Viewmodel.LastError))
    {
        <p>@Viewmodel.LastError</p>
    }
    else if (Viewmodel.Searching)
    {
        <p>Searching...</p>
    }
    else
    {
        <p>No images found.</p>
    }
</div>

@code
{
    protected override void OnInitialized()
    {
        Viewmodel.StateChanged += OnViewmodelOnStateChanged;
    }

    private async Task OnViewmodelOnStateChanged()
    {
        await InvokeAsync(StateHasChanged);
    }

    public async ValueTask DisposeAsync()
    {
        Viewmodel.StateChanged -= OnViewmodelOnStateChanged;
        await Viewmodel.DisposeAsync();
    }
}
