@page "/gallery"
@using Octans.Client.Components.Pages
@inject GalleryViewmodel Viewmodel
@implements IAsyncDisposable

<h3>Gallery</h3>

<SplitContainer @bind-FirstPaneSize="_PaneSize" Orientation="SplitterOrientation.Vertical">

    <FirstPane>
        <section class="querying">
            <GallerySidebar/>
        </section>
    </FirstPane>

    <SecondPane>
        <div class="gallery-container">
            @if (Viewmodel.ImageUrls.Any())
            {
                <div class="image-grid">
                    @foreach (var url in Viewmodel.ImageUrls)
                    {
                        <div class="image-card">
                            <img src="@url"
                                 alt="Gallery image"
                                 loading="lazy"
                                 decoding="async"
                                 referrerpolicy="no-referrer"/>
                        </div>
                    }
                </div>
            }
            else if (!string.IsNullOrWhiteSpace(Viewmodel.LastError))
            {
                <p>@Viewmodel.LastError</p>
            }
            else if (Viewmodel.Searching)
            {
                <p>Searching...</p>
            }
            else
            {
                <p>No images found.</p>
            }
        </div>
    </SecondPane>
</SplitContainer>

@code
{
    private int _PaneSize = 200;

    protected override void OnInitialized()
    {
        Viewmodel.StateChanged += OnViewmodelOnStateChanged;
    }

    private async Task OnViewmodelOnStateChanged()
    {
        await InvokeAsync(StateHasChanged);
    }

    public async ValueTask DisposeAsync()
    {
        Viewmodel.StateChanged -= OnViewmodelOnStateChanged;
        await Viewmodel.DisposeAsync();
    }
}
