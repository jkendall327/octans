// <auto-generated />

using HydrusReplacement.Core.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HydrusReplacement.Server.Migrations
{
    [DbContext(typeof(ServerDbContext))]
    [Migration("20240617212850_AddTaggingTables")]
    partial class AddTaggingTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("HydrusReplacement.Server.Models.FileRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Filepath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FileRecords");
                });

            modelBuilder.Entity("HydrusReplacement.Server.Models.HashItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Hash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("Hashes");
                });

            modelBuilder.Entity("HydrusReplacement.Server.Models.Tagging.Mapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HashId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HashId");

                    b.HasIndex("TagId");

                    b.ToTable("Mappings");
                });

            modelBuilder.Entity("HydrusReplacement.Server.Models.Tagging.Namespace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Namespaces");
                });

            modelBuilder.Entity("HydrusReplacement.Server.Models.Tagging.Subtag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subtags");
                });

            modelBuilder.Entity("HydrusReplacement.Server.Models.Tagging.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NamespaceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubtagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NamespaceId");

                    b.HasIndex("SubtagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("HydrusReplacement.Server.Models.Tagging.TagParent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChildId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("ParentId");

                    b.ToTable("TagParents");
                });

            modelBuilder.Entity("HydrusReplacement.Server.Models.Tagging.TagSibling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BetterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BetterId");

                    b.HasIndex("WorseId");

                    b.ToTable("TagSiblings");
                });

            modelBuilder.Entity("HydrusReplacement.Server.Models.Tagging.Mapping", b =>
                {
                    b.HasOne("HydrusReplacement.Server.Models.HashItem", "Hash")
                        .WithMany()
                        .HasForeignKey("HashId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HydrusReplacement.Server.Models.Tagging.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hash");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("HydrusReplacement.Server.Models.Tagging.Tag", b =>
                {
                    b.HasOne("HydrusReplacement.Server.Models.Tagging.Namespace", "Namespace")
                        .WithMany()
                        .HasForeignKey("NamespaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HydrusReplacement.Server.Models.Tagging.Subtag", "Subtag")
                        .WithMany()
                        .HasForeignKey("SubtagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Namespace");

                    b.Navigation("Subtag");
                });

            modelBuilder.Entity("HydrusReplacement.Server.Models.Tagging.TagParent", b =>
                {
                    b.HasOne("HydrusReplacement.Server.Models.Tagging.Tag", "Child")
                        .WithMany()
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HydrusReplacement.Server.Models.Tagging.Tag", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("HydrusReplacement.Server.Models.Tagging.TagSibling", b =>
                {
                    b.HasOne("HydrusReplacement.Server.Models.Tagging.Tag", "Better")
                        .WithMany()
                        .HasForeignKey("BetterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HydrusReplacement.Server.Models.Tagging.Tag", "Worse")
                        .WithMany()
                        .HasForeignKey("WorseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Better");

                    b.Navigation("Worse");
                });
#pragma warning restore 612, 618
        }
    }
}
